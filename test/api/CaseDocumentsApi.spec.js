/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevEfCms.CaseDocumentsApi();
  });

  describe('(package)', function() {
    describe('CaseDocumentsApi', function() {
      describe('caseDocumentsDocketEntryIdAppendPdfPost', function() {
        it('should call caseDocumentsDocketEntryIdAppendPdfPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketEntryIdAppendPdfPost call and complete the assertions
          /*

          instance.caseDocumentsDocketEntryIdAppendPdfPost(docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdRemovePdfPost', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdRemovePdfPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdRemovePdfPost call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdRemovePdfPost(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocumentContentsIdDocumentContentsGet', function() {
        it('should call caseDocumentsDocumentContentsIdDocumentContentsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocumentContentsIdDocumentContentsGet call and complete the assertions
          /*

          instance.caseDocumentsDocumentContentsIdDocumentContentsGet(documentContentsId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.DocumentContents);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsOrderSearchGet', function() {
        it('should call caseDocumentsOrderSearchGet successfully', function(done) {
          // TODO: uncomment caseDocumentsOrderSearchGet call and complete the assertions
          /*

          instance.caseDocumentsOrderSearchGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiTodaysOpinionsGet', function() {
        it('should call publicApiTodaysOpinionsGet successfully', function(done) {
          // TODO: uncomment publicApiTodaysOpinionsGet call and complete the assertions
          /*

          instance.publicApiTodaysOpinionsGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiTodaysOrdersPageSortOrderGet', function() {
        it('should call publicApiTodaysOrdersPageSortOrderGet successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiTodaysOrdersPageSortOrderGet call and complete the assertions
          /*

          instance.publicApiTodaysOrdersPageSortOrderGet(page, sortOrder, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));

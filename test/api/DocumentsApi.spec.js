/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevEfCms.DocumentsApi();
  });

  describe('(package)', function() {
    describe('DocumentsApi', function() {
      describe('caseDocumentsDocketNumberDocketEntryCompletePut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryCompletePut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryCompletePut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryCompletePut(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdDelete', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdDelete call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdDelete(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdPut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdPut call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdPut(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdSealPut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdSealPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdSealPut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdSealPut(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.DocketEntry);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdSignPost', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdSignPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdSignPost call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdSignPost(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdStrikePut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdStrikePut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdStrikePut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdStrikePut(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdUnsealPut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdUnsealPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdUnsealPut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdUnsealPut(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.DocketEntry);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryInProgressPut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryInProgressPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryInProgressPut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryInProgressPut(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryMetaPut', function() {
        it('should call caseDocumentsDocketNumberDocketEntryMetaPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryMetaPut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberDocketEntryMetaPut(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberExternalDocumentPost', function() {
        it('should call caseDocumentsDocketNumberExternalDocumentPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberExternalDocumentPost call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberExternalDocumentPost(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberKeyDocumentDownloadUrlGet', function() {
        it('should call caseDocumentsDocketNumberKeyDocumentDownloadUrlGet successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberKeyDocumentDownloadUrlGet call
          /*

          instance.caseDocumentsDocketNumberKeyDocumentDownloadUrlGet(docketNumber, key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberKeyDownloadPolicyUrlGet', function() {
        it('should call caseDocumentsDocketNumberKeyDownloadPolicyUrlGet successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberKeyDownloadPolicyUrlGet call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberKeyDownloadPolicyUrlGet(key, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.PolicyUrl);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberPaperFilingPost', function() {
        it('should call caseDocumentsDocketNumberPaperFilingPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberPaperFilingPost call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberPaperFilingPost(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberPaperFilingPut', function() {
        it('should call caseDocumentsDocketNumberPaperFilingPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberPaperFilingPut call and complete the assertions
          /*

          instance.caseDocumentsDocketNumberPaperFilingPut(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsKeyValidatePost', function() {
        it('should call documentsKeyValidatePost successfully', function(done) {
          // TODO: uncomment, update parameter values for documentsKeyValidatePost call
          /*

          instance.documentsKeyValidatePost(key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsKeyVirusScanGet', function() {
        it('should call documentsKeyVirusScanGet successfully', function(done) {
          // TODO: uncomment, update parameter values for documentsKeyVirusScanGet call
          /*

          instance.documentsKeyVirusScanGet(key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsUploadPolicyGet', function() {
        it('should call documentsUploadPolicyGet successfully', function(done) {
          // TODO: uncomment documentsUploadPolicyGet call and complete the assertions
          /*

          instance.documentsUploadPolicyGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.PolicyUrl);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiDocketNumberKeyPublicDocumentDownloadUrlGet', function() {
        it('should call publicApiDocketNumberKeyPublicDocumentDownloadUrlGet successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiDocketNumberKeyPublicDocumentDownloadUrlGet call
          /*

          instance.publicApiDocketNumberKeyPublicDocumentDownloadUrlGet(docketNumber, key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));

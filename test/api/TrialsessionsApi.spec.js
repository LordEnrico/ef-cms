/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevEfCms.TrialsessionsApi();
  });

  describe('(package)', function() {
    describe('TrialsessionsApi', function() {
      describe('trialSessionsGet', function() {
        it('should call trialSessionsGet successfully', function(done) {
          // TODO: uncomment trialSessionsGet call and complete the assertions
          /*

          instance.trialSessionsGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsPost', function() {
        it('should call trialSessionsPost successfully', function(done) {
          // TODO: uncomment trialSessionsPost call and complete the assertions
          /*

          instance.trialSessionsPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsPut', function() {
        it('should call trialSessionsPut successfully', function(done) {
          // TODO: uncomment trialSessionsPut call and complete the assertions
          /*

          instance.trialSessionsPut(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdCasesDocketNumberPost', function() {
        it('should call trialSessionsTrialSessionIdCasesDocketNumberPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdCasesDocketNumberPost call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdCasesDocketNumberPost(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdEligibleCasesGet', function() {
        it('should call trialSessionsTrialSessionIdEligibleCasesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdEligibleCasesGet call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdEligibleCasesGet(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdGenerateNoticesPost', function() {
        it('should call trialSessionsTrialSessionIdGenerateNoticesPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdGenerateNoticesPost call
          /*

          instance.trialSessionsTrialSessionIdGenerateNoticesPost(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdGet', function() {
        it('should call trialSessionsTrialSessionIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdGet call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdGet(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdGetAssociatedCasesGet', function() {
        it('should call trialSessionsTrialSessionIdGetAssociatedCasesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdGetAssociatedCasesGet call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdGetAssociatedCasesGet(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdPrintableWorkingCopyPost', function() {
        it('should call trialSessionsTrialSessionIdPrintableWorkingCopyPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdPrintableWorkingCopyPost call and complete the assertions
          /*
          var opts = {};

          instance.trialSessionsTrialSessionIdPrintableWorkingCopyPost(trialSessionId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(&#x27;string&#x27;);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdRemoveCaseDocketNumberPut', function() {
        it('should call trialSessionsTrialSessionIdRemoveCaseDocketNumberPut successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdRemoveCaseDocketNumberPut call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdRemoveCaseDocketNumberPut(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.ModelCase);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetCalendarPost', function() {
        it('should call trialSessionsTrialSessionIdSetCalendarPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetCalendarPost call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdSetCalendarPost(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetHearingDocketNumberPost', function() {
        it('should call trialSessionsTrialSessionIdSetHearingDocketNumberPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetHearingDocketNumberPost call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdSetHearingDocketNumberPost(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetSwingSessionPost', function() {
        it('should call trialSessionsTrialSessionIdSetSwingSessionPost successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetSwingSessionPost call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdSetSwingSessionPost(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSession);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdWorkingCopyGet', function() {
        it('should call trialSessionsTrialSessionIdWorkingCopyGet successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdWorkingCopyGet call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdWorkingCopyGet(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSessionWorkingCopy);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdWorkingCopyPut', function() {
        it('should call trialSessionsTrialSessionIdWorkingCopyPut successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdWorkingCopyPut call and complete the assertions
          /*

          instance.trialSessionsTrialSessionIdWorkingCopyPut(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.TrialSessionWorkingCopy);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));

/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DevEfCms.DefaultApi();
  });

  describe('(package)', function() {
    describe('DefaultApi', function() {
      describe('apiCasesDocketNumberGenerateDocketRecordOptions', function() {
        it('should call apiCasesDocketNumberGenerateDocketRecordOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for apiCasesDocketNumberGenerateDocketRecordOptions call
          /*

          instance.apiCasesDocketNumberGenerateDocketRecordOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiCasesDocketNumberGenerateDocketRecordPost', function() {
        it('should call apiCasesDocketNumberGenerateDocketRecordPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiCasesDocketNumberGenerateDocketRecordPost call
          /*

          instance.apiCasesDocketNumberGenerateDocketRecordPost(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiCourtIssuedOrderOptions', function() {
        it('should call apiCourtIssuedOrderOptions successfully', function(done) {
          // TODO: uncomment apiCourtIssuedOrderOptions call
          /*

          instance.apiCourtIssuedOrderOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiCourtIssuedOrderPost', function() {
        it('should call apiCourtIssuedOrderPost successfully', function(done) {
          // TODO: uncomment apiCourtIssuedOrderPost call
          /*

          instance.apiCourtIssuedOrderPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiDocketRecordPdfOptions', function() {
        it('should call apiDocketRecordPdfOptions successfully', function(done) {
          // TODO: uncomment apiDocketRecordPdfOptions call
          /*

          instance.apiDocketRecordPdfOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiDocketRecordPdfPost', function() {
        it('should call apiDocketRecordPdfPost successfully', function(done) {
          // TODO: uncomment apiDocketRecordPdfPost call
          /*

          instance.apiDocketRecordPdfPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiNotificationsOptions', function() {
        it('should call apiNotificationsOptions successfully', function(done) {
          // TODO: uncomment apiNotificationsOptions call
          /*

          instance.apiNotificationsOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiRunBatchProcessPost', function() {
        it('should call apiRunBatchProcessPost successfully', function(done) {
          // TODO: uncomment apiRunBatchProcessPost call and complete the assertions
          /*

          instance.apiRunBatchProcessPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.PolicyUrl);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiSwaggerGet', function() {
        it('should call apiSwaggerGet successfully', function(done) {
          // TODO: uncomment apiSwaggerGet call
          /*

          instance.apiSwaggerGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiSwaggerJsonGet', function() {
        it('should call apiSwaggerJsonGet successfully', function(done) {
          // TODO: uncomment apiSwaggerJsonGet call
          /*

          instance.apiSwaggerJsonGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiSwaggerJsonOptions', function() {
        it('should call apiSwaggerJsonOptions successfully', function(done) {
          // TODO: uncomment apiSwaggerJsonOptions call
          /*

          instance.apiSwaggerJsonOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiSwaggerOptions', function() {
        it('should call apiSwaggerOptions successfully', function(done) {
          // TODO: uncomment apiSwaggerOptions call
          /*

          instance.apiSwaggerOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('asyncUsersVerifyEmailOptions', function() {
        it('should call asyncUsersVerifyEmailOptions successfully', function(done) {
          // TODO: uncomment asyncUsersVerifyEmailOptions call
          /*

          instance.asyncUsersVerifyEmailOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authLoginOptions', function() {
        it('should call authLoginOptions successfully', function(done) {
          // TODO: uncomment authLoginOptions call
          /*

          instance.authLoginOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('authRefreshOptions', function() {
        it('should call authRefreshOptions successfully', function(done) {
          // TODO: uncomment authRefreshOptions call
          /*

          instance.authRefreshOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDeadlinesDocketNumberCaseDeadlineIdOptions', function() {
        it('should call caseDeadlinesDocketNumberCaseDeadlineIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDeadlinesDocketNumberCaseDeadlineIdOptions call
          /*

          instance.caseDeadlinesDocketNumberCaseDeadlineIdOptions(docketNumber, caseDeadlineId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDeadlinesDocketNumberOptions', function() {
        it('should call caseDeadlinesDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDeadlinesDocketNumberOptions call
          /*

          instance.caseDeadlinesDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDeadlinesOptions', function() {
        it('should call caseDeadlinesOptions successfully', function(done) {
          // TODO: uncomment caseDeadlinesOptions call
          /*

          instance.caseDeadlinesOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketEntryIdAppendPdfOptions', function() {
        it('should call caseDocumentsDocketEntryIdAppendPdfOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketEntryIdAppendPdfOptions call
          /*

          instance.caseDocumentsDocketEntryIdAppendPdfOptions(docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedDocketEntryOptions', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedDocketEntryOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedDocketEntryOptions call
          /*

          instance.caseDocumentsDocketNumberCourtIssuedDocketEntryOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedDocketEntryPost', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedDocketEntryPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedDocketEntryPost call
          /*

          instance.caseDocumentsDocketNumberCourtIssuedDocketEntryPost(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedDocketEntryPut', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedDocketEntryPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedDocketEntryPut call
          /*

          instance.caseDocumentsDocketNumberCourtIssuedDocketEntryPut(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedOrderOptions', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedOrderOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedOrderOptions call
          /*

          instance.caseDocumentsDocketNumberCourtIssuedOrderOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedOrderPost', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedOrderPost successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedOrderPost call
          /*

          instance.caseDocumentsDocketNumberCourtIssuedOrderPost(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdOptions', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdOptions call
          /*
          var opts = {};

          instance.caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdOptions(docketNumber, docketEntryId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdPut', function() {
        it('should call caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdPut call
          /*
          var opts = {};

          instance.caseDocumentsDocketNumberCourtIssuedOrdersDocketEntryIdPut(docketNumber, docketEntryId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryCompleteOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryCompleteOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryCompleteOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryCompleteOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdCoversheetOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdCoversheetOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdCoversheetOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdCoversheetOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdRemovePdfOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdRemovePdfOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdRemovePdfOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdRemovePdfOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdSealOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdSealOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdSealOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdSealOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdServeCourtIssuedOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdServeCourtIssuedOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdServeCourtIssuedOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdServeCourtIssuedOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdServeOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdServeOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdServeOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdServeOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdSignOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdSignOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdSignOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdSignOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdStrikeOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdStrikeOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdStrikeOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdStrikeOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdUnsealOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdUnsealOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdUnsealOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdUnsealOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryIdWorkItemsOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryIdWorkItemsOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryIdWorkItemsOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryIdWorkItemsOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryInProgressOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryInProgressOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryInProgressOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryInProgressOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberDocketEntryMetaOptions', function() {
        it('should call caseDocumentsDocketNumberDocketEntryMetaOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberDocketEntryMetaOptions call
          /*

          instance.caseDocumentsDocketNumberDocketEntryMetaOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberExternalDocumentOptions', function() {
        it('should call caseDocumentsDocketNumberExternalDocumentOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberExternalDocumentOptions call
          /*

          instance.caseDocumentsDocketNumberExternalDocumentOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberKeyDocumentDownloadUrlOptions', function() {
        it('should call caseDocumentsDocketNumberKeyDocumentDownloadUrlOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberKeyDocumentDownloadUrlOptions call
          /*

          instance.caseDocumentsDocketNumberKeyDocumentDownloadUrlOptions(docketNumber, key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberKeyDownloadPolicyUrlOptions', function() {
        it('should call caseDocumentsDocketNumberKeyDownloadPolicyUrlOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberKeyDownloadPolicyUrlOptions call
          /*

          instance.caseDocumentsDocketNumberKeyDownloadPolicyUrlOptions(key, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberMotionDocketEntryIdStampOptions', function() {
        it('should call caseDocumentsDocketNumberMotionDocketEntryIdStampOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberMotionDocketEntryIdStampOptions call
          /*

          instance.caseDocumentsDocketNumberMotionDocketEntryIdStampOptions(docketNumber, motionDocketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocketNumberPaperFilingOptions', function() {
        it('should call caseDocumentsDocketNumberPaperFilingOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocketNumberPaperFilingOptions call
          /*

          instance.caseDocumentsDocketNumberPaperFilingOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsDocumentContentsIdDocumentContentsOptions', function() {
        it('should call caseDocumentsDocumentContentsIdDocumentContentsOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseDocumentsDocumentContentsIdDocumentContentsOptions call
          /*

          instance.caseDocumentsDocumentContentsIdDocumentContentsOptions(documentContentsId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseDocumentsOrderSearchOptions', function() {
        it('should call caseDocumentsOrderSearchOptions successfully', function(done) {
          // TODO: uncomment caseDocumentsOrderSearchOptions call
          /*

          instance.caseDocumentsOrderSearchOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberAddPetitionerOptions', function() {
        it('should call caseMetaDocketNumberAddPetitionerOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberAddPetitionerOptions call
          /*

          instance.caseMetaDocketNumberAddPetitionerOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberBlockOptions', function() {
        it('should call caseMetaDocketNumberBlockOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberBlockOptions call
          /*

          instance.caseMetaDocketNumberBlockOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberCaseContextOptions', function() {
        it('should call caseMetaDocketNumberCaseContextOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberCaseContextOptions call
          /*

          instance.caseMetaDocketNumberCaseContextOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberConsolidateCaseOptions', function() {
        it('should call caseMetaDocketNumberConsolidateCaseOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberConsolidateCaseOptions call
          /*

          instance.caseMetaDocketNumberConsolidateCaseOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberHighPriorityOptions', function() {
        it('should call caseMetaDocketNumberHighPriorityOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberHighPriorityOptions call
          /*

          instance.caseMetaDocketNumberHighPriorityOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberOtherStatisticsOptions', function() {
        it('should call caseMetaDocketNumberOtherStatisticsOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberOtherStatisticsOptions call
          /*

          instance.caseMetaDocketNumberOtherStatisticsOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberQcCompleteOptions', function() {
        it('should call caseMetaDocketNumberQcCompleteOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberQcCompleteOptions call
          /*
          var opts = {};

          instance.caseMetaDocketNumberQcCompleteOptions(docketNumber, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberSealAddressContactIdOptions', function() {
        it('should call caseMetaDocketNumberSealAddressContactIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberSealAddressContactIdOptions call
          /*

          instance.caseMetaDocketNumberSealAddressContactIdOptions(docketNumber, contactId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberSealOptions', function() {
        it('should call caseMetaDocketNumberSealOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberSealOptions call
          /*

          instance.caseMetaDocketNumberSealOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseMetaDocketNumberStatisticsOptions', function() {
        it('should call caseMetaDocketNumberStatisticsOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseMetaDocketNumberStatisticsOptions call
          /*

          instance.caseMetaDocketNumberStatisticsOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseNotesDocketNumberOptions', function() {
        it('should call caseNotesDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseNotesDocketNumberOptions call
          /*

          instance.caseNotesDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('caseNotesDocketNumberUserNotesOptions', function() {
        it('should call caseNotesDocketNumberUserNotesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for caseNotesDocketNumberUserNotesOptions call
          /*

          instance.caseNotesDocketNumberUserNotesOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberAssociatePrivatePractitionerOptions', function() {
        it('should call casePartiesDocketNumberAssociatePrivatePractitionerOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberAssociatePrivatePractitionerOptions call
          /*

          instance.casePartiesDocketNumberAssociatePrivatePractitionerOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberAssociateRespondentOptions', function() {
        it('should call casePartiesDocketNumberAssociateRespondentOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberAssociateRespondentOptions call
          /*

          instance.casePartiesDocketNumberAssociateRespondentOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberCaseDetailsOptions', function() {
        it('should call casePartiesDocketNumberCaseDetailsOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberCaseDetailsOptions call
          /*

          instance.casePartiesDocketNumberCaseDetailsOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberContactPrimaryOptions', function() {
        it('should call casePartiesDocketNumberContactPrimaryOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberContactPrimaryOptions call
          /*

          instance.casePartiesDocketNumberContactPrimaryOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberContactSecondaryOptions', function() {
        it('should call casePartiesDocketNumberContactSecondaryOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberContactSecondaryOptions call
          /*

          instance.casePartiesDocketNumberContactSecondaryOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberCounselUserIdOptions', function() {
        it('should call casePartiesDocketNumberCounselUserIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberCounselUserIdOptions call
          /*

          instance.casePartiesDocketNumberCounselUserIdOptions(docketNumber, userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casePartiesDocketNumberPetitionerInfoOptions', function() {
        it('should call casePartiesDocketNumberPetitionerInfoOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casePartiesDocketNumberPetitionerInfoOptions call
          /*

          instance.casePartiesDocketNumberPetitionerInfoOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesDocketNumberConsolidatedCasesOptions', function() {
        it('should call casesDocketNumberConsolidatedCasesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casesDocketNumberConsolidatedCasesOptions call
          /*

          instance.casesDocketNumberConsolidatedCasesOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesDocketNumberIrsPetitionPackageOptions', function() {
        it('should call casesDocketNumberIrsPetitionPackageOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casesDocketNumberIrsPetitionPackageOptions call
          /*

          instance.casesDocketNumberIrsPetitionPackageOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesDocketNumberOptions', function() {
        it('should call casesDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casesDocketNumberOptions call
          /*

          instance.casesDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesDocketNumberRemovePendingDocketEntryIdOptions', function() {
        it('should call casesDocketNumberRemovePendingDocketEntryIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casesDocketNumberRemovePendingDocketEntryIdOptions call
          /*

          instance.casesDocketNumberRemovePendingDocketEntryIdOptions(docketNumber, docketEntryId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesDocketNumberStatisticsStatisticIdOptions', function() {
        it('should call casesDocketNumberStatisticsStatisticIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for casesDocketNumberStatisticsStatisticIdOptions call
          /*

          instance.casesDocketNumberStatisticsStatisticIdOptions(docketNumber, statisticId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesOptions', function() {
        it('should call casesOptions successfully', function(done) {
          // TODO: uncomment casesOptions call
          /*

          instance.casesOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesPaperOptions', function() {
        it('should call casesPaperOptions successfully', function(done) {
          // TODO: uncomment casesPaperOptions call
          /*

          instance.casesPaperOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('casesSearchOptions', function() {
        it('should call casesSearchOptions successfully', function(done) {
          // TODO: uncomment casesSearchOptions call
          /*

          instance.casesSearchOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsFilingReceiptPdfOptions', function() {
        it('should call documentsFilingReceiptPdfOptions successfully', function(done) {
          // TODO: uncomment documentsFilingReceiptPdfOptions call
          /*

          instance.documentsFilingReceiptPdfOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsFilingReceiptPdfPost', function() {
        it('should call documentsFilingReceiptPdfPost successfully', function(done) {
          // TODO: uncomment documentsFilingReceiptPdfPost call
          /*

          instance.documentsFilingReceiptPdfPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsKeyValidateOptions', function() {
        it('should call documentsKeyValidateOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for documentsKeyValidateOptions call
          /*

          instance.documentsKeyValidateOptions(key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsKeyVirusScanOptions', function() {
        it('should call documentsKeyVirusScanOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for documentsKeyVirusScanOptions call
          /*

          instance.documentsKeyVirusScanOptions(key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('documentsUploadPolicyOptions', function() {
        it('should call documentsUploadPolicyOptions successfully', function(done) {
          // TODO: uncomment documentsUploadPolicyOptions call
          /*

          instance.documentsUploadPolicyOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('featureFlagFeatureFlagGet', function() {
        it('should call featureFlagFeatureFlagGet successfully', function(done) {
          // TODO: uncomment, update parameter values for featureFlagFeatureFlagGet call and complete the assertions
          /*

          instance.featureFlagFeatureFlagGet(featureFlag, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(&#x27;boolean&#x27;);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('featureFlagFeatureFlagOptions', function() {
        it('should call featureFlagFeatureFlagOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for featureFlagFeatureFlagOptions call
          /*

          instance.featureFlagFeatureFlagOptions(featureFlag, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('irsPractitionersRespondentIdCasesOptions', function() {
        it('should call irsPractitionersRespondentIdCasesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for irsPractitionersRespondentIdCasesOptions call
          /*

          instance.irsPractitionersRespondentIdCasesOptions(respondentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('judgesOptions', function() {
        it('should call judgesOptions successfully', function(done) {
          // TODO: uncomment judgesOptions call
          /*

          instance.judgesOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesCaseDocketNumberOptions', function() {
        it('should call messagesCaseDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesCaseDocketNumberOptions call
          /*

          instance.messagesCaseDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesCompletedSectionSectionIdOptions', function() {
        it('should call messagesCompletedSectionSectionIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesCompletedSectionSectionIdOptions call
          /*

          instance.messagesCompletedSectionSectionIdOptions(sectionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesCompletedUserIdOptions', function() {
        it('should call messagesCompletedUserIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesCompletedUserIdOptions call
          /*

          instance.messagesCompletedUserIdOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesInboxSectionSectionOptions', function() {
        it('should call messagesInboxSectionSectionOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesInboxSectionSectionOptions call
          /*

          instance.messagesInboxSectionSectionOptions(section, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesInboxUserIdOptions', function() {
        it('should call messagesInboxUserIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesInboxUserIdOptions call
          /*

          instance.messagesInboxUserIdOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesMessageIdOptions', function() {
        it('should call messagesMessageIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesMessageIdOptions call
          /*

          instance.messagesMessageIdOptions(messageId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesMessageIdReadOptions', function() {
        it('should call messagesMessageIdReadOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesMessageIdReadOptions call
          /*
          var opts = {};

          instance.messagesMessageIdReadOptions(messageId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesOptions', function() {
        it('should call messagesOptions successfully', function(done) {
          // TODO: uncomment messagesOptions call
          /*

          instance.messagesOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesOutboxSectionSectionOptions', function() {
        it('should call messagesOutboxSectionSectionOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesOutboxSectionSectionOptions call
          /*

          instance.messagesOutboxSectionSectionOptions(section, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesOutboxUserIdOptions', function() {
        it('should call messagesOutboxUserIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesOutboxUserIdOptions call
          /*

          instance.messagesOutboxUserIdOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesParentMessageIdCompleteOptions', function() {
        it('should call messagesParentMessageIdCompleteOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesParentMessageIdCompleteOptions call
          /*
          var opts = {};

          instance.messagesParentMessageIdCompleteOptions(parentMessageId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesParentMessageIdForwardOptions', function() {
        it('should call messagesParentMessageIdForwardOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesParentMessageIdForwardOptions call
          /*
          var opts = {};

          instance.messagesParentMessageIdForwardOptions(parentMessageId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('messagesParentMessageIdReplyOptions', function() {
        it('should call messagesParentMessageIdReplyOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for messagesParentMessageIdReplyOptions call
          /*
          var opts = {};

          instance.messagesParentMessageIdReplyOptions(parentMessageId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('practitionersBarNumberOptions', function() {
        it('should call practitionersBarNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for practitionersBarNumberOptions call
          /*

          instance.practitionersBarNumberOptions(barNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('practitionersOptions', function() {
        it('should call practitionersOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for practitionersOptions call
          /*

          instance.practitionersOptions(name, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiCasesDocketNumberOptions', function() {
        it('should call publicApiCasesDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiCasesDocketNumberOptions call
          /*

          instance.publicApiCasesDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiDocketNumberKeyPublicDocumentDownloadUrlOptions', function() {
        it('should call publicApiDocketNumberKeyPublicDocumentDownloadUrlOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiDocketNumberKeyPublicDocumentDownloadUrlOptions call
          /*

          instance.publicApiDocketNumberKeyPublicDocumentDownloadUrlOptions(docketNumber, key, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiDocketNumberSearchDocketNumberOptions', function() {
        it('should call publicApiDocketNumberSearchDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiDocketNumberSearchDocketNumberOptions call
          /*

          instance.publicApiDocketNumberSearchDocketNumberOptions(docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiHealthOptions', function() {
        it('should call publicApiHealthOptions successfully', function(done) {
          // TODO: uncomment publicApiHealthOptions call
          /*

          instance.publicApiHealthOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiOpinionSearchOptions', function() {
        it('should call publicApiOpinionSearchOptions successfully', function(done) {
          // TODO: uncomment publicApiOpinionSearchOptions call
          /*

          instance.publicApiOpinionSearchOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiOrderSearchOptions', function() {
        it('should call publicApiOrderSearchOptions successfully', function(done) {
          // TODO: uncomment publicApiOrderSearchOptions call
          /*

          instance.publicApiOrderSearchOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiSearchOptions', function() {
        it('should call publicApiSearchOptions successfully', function(done) {
          // TODO: uncomment publicApiSearchOptions call
          /*

          instance.publicApiSearchOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiTodaysOpinionsOptions', function() {
        it('should call publicApiTodaysOpinionsOptions successfully', function(done) {
          // TODO: uncomment publicApiTodaysOpinionsOptions call
          /*

          instance.publicApiTodaysOpinionsOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('publicApiTodaysOrdersPageSortOrderOptions', function() {
        it('should call publicApiTodaysOrdersPageSortOrderOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for publicApiTodaysOrdersPageSortOrderOptions call
          /*

          instance.publicApiTodaysOrdersPageSortOrderOptions(page, sortOrder, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsBlockedTrialLocationOptions', function() {
        it('should call reportsBlockedTrialLocationOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for reportsBlockedTrialLocationOptions call
          /*

          instance.reportsBlockedTrialLocationOptions(trialLocation, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsCaseInventoryReportOptions', function() {
        it('should call reportsCaseInventoryReportOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for reportsCaseInventoryReportOptions call
          /*
          var opts = {};

          instance.reportsCaseInventoryReportOptions(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPendingItemsGet', function() {
        it('should call reportsPendingItemsGet successfully', function(done) {
          // TODO: uncomment reportsPendingItemsGet call and complete the assertions
          /*

          instance.reportsPendingItemsGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DevEfCms.Document);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPendingItemsOptions', function() {
        it('should call reportsPendingItemsOptions successfully', function(done) {
          // TODO: uncomment reportsPendingItemsOptions call
          /*

          instance.reportsPendingItemsOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPendingReportGet', function() {
        it('should call reportsPendingReportGet successfully', function(done) {
          // TODO: uncomment reportsPendingReportGet call
          /*

          instance.reportsPendingReportGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPendingReportOptions', function() {
        it('should call reportsPendingReportOptions successfully', function(done) {
          // TODO: uncomment reportsPendingReportOptions call
          /*

          instance.reportsPendingReportOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPlanningReportOptions', function() {
        it('should call reportsPlanningReportOptions successfully', function(done) {
          // TODO: uncomment reportsPlanningReportOptions call
          /*

          instance.reportsPlanningReportOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPlanningReportPost', function() {
        it('should call reportsPlanningReportPost successfully', function(done) {
          // TODO: uncomment reportsPlanningReportPost call
          /*

          instance.reportsPlanningReportPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsPrintableCaseInventoryReportOptions', function() {
        it('should call reportsPrintableCaseInventoryReportOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for reportsPrintableCaseInventoryReportOptions call
          /*
          var opts = {};

          instance.reportsPrintableCaseInventoryReportOptions(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsTrialCalendarPdfOptions', function() {
        it('should call reportsTrialCalendarPdfOptions successfully', function(done) {
          // TODO: uncomment reportsTrialCalendarPdfOptions call
          /*

          instance.reportsTrialCalendarPdfOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('reportsTrialCalendarPdfPost', function() {
        it('should call reportsTrialCalendarPdfPost successfully', function(done) {
          // TODO: uncomment reportsTrialCalendarPdfPost call
          /*

          instance.reportsTrialCalendarPdfPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sectionsSectionDocumentQcInboxOptions', function() {
        it('should call sectionsSectionDocumentQcInboxOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for sectionsSectionDocumentQcInboxOptions call
          /*
          var opts = {};

          instance.sectionsSectionDocumentQcInboxOptions(section, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sectionsSectionDocumentQcServedOptions', function() {
        it('should call sectionsSectionDocumentQcServedOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for sectionsSectionDocumentQcServedOptions call
          /*

          instance.sectionsSectionDocumentQcServedOptions(section, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sectionsSectionUsersOptions', function() {
        it('should call sectionsSectionUsersOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for sectionsSectionUsersOptions call
          /*

          instance.sectionsSectionUsersOptions(section, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsOptions', function() {
        it('should call trialSessionsOptions successfully', function(done) {
          // TODO: uncomment trialSessionsOptions call
          /*

          instance.trialSessionsOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdCasesDocketNumberOptions', function() {
        it('should call trialSessionsTrialSessionIdCasesDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdCasesDocketNumberOptions call
          /*

          instance.trialSessionsTrialSessionIdCasesDocketNumberOptions(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdEligibleCasesOptions', function() {
        it('should call trialSessionsTrialSessionIdEligibleCasesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdEligibleCasesOptions call
          /*

          instance.trialSessionsTrialSessionIdEligibleCasesOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdGenerateNoticesOptions', function() {
        it('should call trialSessionsTrialSessionIdGenerateNoticesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdGenerateNoticesOptions call
          /*

          instance.trialSessionsTrialSessionIdGenerateNoticesOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdGetAssociatedCasesOptions', function() {
        it('should call trialSessionsTrialSessionIdGetAssociatedCasesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdGetAssociatedCasesOptions call
          /*

          instance.trialSessionsTrialSessionIdGetAssociatedCasesOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdOptions', function() {
        it('should call trialSessionsTrialSessionIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdOptions call
          /*

          instance.trialSessionsTrialSessionIdOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdPrintableWorkingCopyOptions', function() {
        it('should call trialSessionsTrialSessionIdPrintableWorkingCopyOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdPrintableWorkingCopyOptions call
          /*
          var opts = {};

          instance.trialSessionsTrialSessionIdPrintableWorkingCopyOptions(trialSessionId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdRemoveCaseDocketNumberOptions', function() {
        it('should call trialSessionsTrialSessionIdRemoveCaseDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdRemoveCaseDocketNumberOptions call
          /*

          instance.trialSessionsTrialSessionIdRemoveCaseDocketNumberOptions(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetCalendarOptions', function() {
        it('should call trialSessionsTrialSessionIdSetCalendarOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetCalendarOptions call
          /*

          instance.trialSessionsTrialSessionIdSetCalendarOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetHearingDocketNumberOptions', function() {
        it('should call trialSessionsTrialSessionIdSetHearingDocketNumberOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetHearingDocketNumberOptions call
          /*

          instance.trialSessionsTrialSessionIdSetHearingDocketNumberOptions(trialSessionId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdSetSwingSessionOptions', function() {
        it('should call trialSessionsTrialSessionIdSetSwingSessionOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdSetSwingSessionOptions call
          /*

          instance.trialSessionsTrialSessionIdSetSwingSessionOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('trialSessionsTrialSessionIdWorkingCopyOptions', function() {
        it('should call trialSessionsTrialSessionIdWorkingCopyOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for trialSessionsTrialSessionIdWorkingCopyOptions call
          /*

          instance.trialSessionsTrialSessionIdWorkingCopyOptions(trialSessionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersInternalOptions', function() {
        it('should call usersInternalOptions successfully', function(done) {
          // TODO: uncomment usersInternalOptions call
          /*

          instance.usersInternalOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersOptions', function() {
        it('should call usersOptions successfully', function(done) {
          // TODO: uncomment usersOptions call
          /*

          instance.usersOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersPendingEmailOptions', function() {
        it('should call usersPendingEmailOptions successfully', function(done) {
          // TODO: uncomment usersPendingEmailOptions call
          /*

          instance.usersPendingEmailOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdCaseDocketNumberPendingOptions', function() {
        it('should call usersUserIdCaseDocketNumberPendingOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdCaseDocketNumberPendingOptions call
          /*

          instance.usersUserIdCaseDocketNumberPendingOptions(userId, docketNumber, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdCasesOptions', function() {
        it('should call usersUserIdCasesOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdCasesOptions call
          /*

          instance.usersUserIdCasesOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdContactInfoOptions', function() {
        it('should call usersUserIdContactInfoOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdContactInfoOptions call
          /*

          instance.usersUserIdContactInfoOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdDocumentQcInboxOptions', function() {
        it('should call usersUserIdDocumentQcInboxOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdDocumentQcInboxOptions call
          /*

          instance.usersUserIdDocumentQcInboxOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdDocumentQcServedOptions', function() {
        it('should call usersUserIdDocumentQcServedOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdDocumentQcServedOptions call
          /*

          instance.usersUserIdDocumentQcServedOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('usersUserIdPendingEmailOptions', function() {
        it('should call usersUserIdPendingEmailOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for usersUserIdPendingEmailOptions call
          /*

          instance.usersUserIdPendingEmailOptions(userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('workItemsOptions', function() {
        it('should call workItemsOptions successfully', function(done) {
          // TODO: uncomment workItemsOptions call
          /*

          instance.workItemsOptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('workItemsWorkItemIdAssigneeOptions', function() {
        it('should call workItemsWorkItemIdAssigneeOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for workItemsWorkItemIdAssigneeOptions call
          /*

          instance.workItemsWorkItemIdAssigneeOptions(workItemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('workItemsWorkItemIdCompleteOptions', function() {
        it('should call workItemsWorkItemIdCompleteOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for workItemsWorkItemIdCompleteOptions call
          /*

          instance.workItemsWorkItemIdCompleteOptions(workItemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('workItemsWorkItemIdOptions', function() {
        it('should call workItemsWorkItemIdOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for workItemsWorkItemIdOptions call
          /*

          instance.workItemsWorkItemIdOptions(workItemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('workItemsWorkItemIdReadOptions', function() {
        it('should call workItemsWorkItemIdReadOptions successfully', function(done) {
          // TODO: uncomment, update parameter values for workItemsWorkItemIdReadOptions call
          /*

          instance.workItemsWorkItemIdReadOptions(workItemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));

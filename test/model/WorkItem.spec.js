/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('WorkItem', function() {
      beforeEach(function() {
        instance = new DevEfCms.WorkItem();
      });

      it('should create an instance of WorkItem', function() {
        // TODO: update the code to test WorkItem
        expect(instance).to.be.a(DevEfCms.WorkItem);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property assigneeName (base name: "assigneeName")', function() {
        // TODO: update the code to test the property assigneeName
        expect(instance).to.have.property('assigneeName');
        // expect(instance.assigneeName).to.be(expectedValueLiteral);
      });

      it('should have the property document (base name: "document")', function() {
        // TODO: update the code to test the property document
        expect(instance).to.have.property('document');
        // expect(instance.document).to.be(expectedValueLiteral);
      });

      it('should have the property messages (base name: "messages")', function() {
        // TODO: update the code to test the property messages
        expect(instance).to.have.property('messages');
        // expect(instance.messages).to.be(expectedValueLiteral);
      });

      it('should have the property workItemId (base name: "workItemId")', function() {
        // TODO: update the code to test the property workItemId
        expect(instance).to.have.property('workItemId');
        // expect(instance.workItemId).to.be(expectedValueLiteral);
      });

      it('should have the property assigneeId (base name: "assigneeId")', function() {
        // TODO: update the code to test the property assigneeId
        expect(instance).to.have.property('assigneeId');
        // expect(instance.assigneeId).to.be(expectedValueLiteral);
      });

      it('should have the property docketNumber (base name: "docketNumber")', function() {
        // TODO: update the code to test the property docketNumber
        expect(instance).to.have.property('docketNumber');
        // expect(instance.docketNumber).to.be(expectedValueLiteral);
      });

      it('should have the property sentBy (base name: "sentBy")', function() {
        // TODO: update the code to test the property sentBy
        expect(instance).to.have.property('sentBy');
        // expect(instance.sentBy).to.be(expectedValueLiteral);
      });

      it('should have the property updatedAt (base name: "updatedAt")', function() {
        // TODO: update the code to test the property updatedAt
        expect(instance).to.have.property('updatedAt');
        // expect(instance.updatedAt).to.be(expectedValueLiteral);
      });

    });
  });

}));

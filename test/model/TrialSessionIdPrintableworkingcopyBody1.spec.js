/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TrialSessionIdPrintableworkingcopyBody1', function() {
      beforeEach(function() {
        instance = new DevEfCms.TrialSessionIdPrintableworkingcopyBody1();
      });

      it('should create an instance of TrialSessionIdPrintableworkingcopyBody1', function() {
        // TODO: update the code to test TrialSessionIdPrintableworkingcopyBody1
        expect(instance).to.be.a(DevEfCms.TrialSessionIdPrintableworkingcopyBody1);
      });

      it('should have the property showCaseNotes (base name: "showCaseNotes")', function() {
        // TODO: update the code to test the property showCaseNotes
        expect(instance).to.have.property('showCaseNotes');
        // expect(instance.showCaseNotes).to.be(expectedValueLiteral);
      });

      it('should have the property filters (base name: "filters")', function() {
        // TODO: update the code to test the property filters
        expect(instance).to.have.property('filters');
        // expect(instance.filters).to.be(expectedValueLiteral);
      });

      it('should have the property formattedCases (base name: "formattedCases")', function() {
        // TODO: update the code to test the property formattedCases
        expect(instance).to.have.property('formattedCases');
        // expect(instance.formattedCases).to.be(expectedValueLiteral);
      });

      it('should have the property formattedTrialSession (base name: "formattedTrialSession")', function() {
        // TODO: update the code to test the property formattedTrialSession
        expect(instance).to.have.property('formattedTrialSession');
        // expect(instance.formattedTrialSession).to.be(expectedValueLiteral);
      });

      it('should have the property sessionNotes (base name: "sessionNotes")', function() {
        // TODO: update the code to test the property sessionNotes
        expect(instance).to.have.property('sessionNotes');
        // expect(instance.sessionNotes).to.be(expectedValueLiteral);
      });

      it('should have the property sort (base name: "sort")', function() {
        // TODO: update the code to test the property sort
        expect(instance).to.have.property('sort');
        // expect(instance.sort).to.be(expectedValueLiteral);
      });

      it('should have the property userHeading (base name: "userHeading")', function() {
        // TODO: update the code to test the property userHeading
        expect(instance).to.have.property('userHeading');
        // expect(instance.userHeading).to.be(expectedValueLiteral);
      });

    });
  });

}));

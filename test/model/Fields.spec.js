/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Fields', function() {
      beforeEach(function() {
        instance = new DevEfCms.Fields();
      });

      it('should create an instance of Fields', function() {
        // TODO: update the code to test Fields
        expect(instance).to.be.a(DevEfCms.Fields);
      });

      it('should have the property bucket (base name: "bucket")', function() {
        // TODO: update the code to test the property bucket
        expect(instance).to.have.property('bucket');
        // expect(instance.bucket).to.be(expectedValueLiteral);
      });

      it('should have the property policy (base name: "Policy")', function() {
        // TODO: update the code to test the property policy
        expect(instance).to.have.property('policy');
        // expect(instance.policy).to.be(expectedValueLiteral);
      });

      it('should have the property xAmzDate (base name: "X-Amz-Date")', function() {
        // TODO: update the code to test the property xAmzDate
        expect(instance).to.have.property('xAmzDate');
        // expect(instance.xAmzDate).to.be(expectedValueLiteral);
      });

      it('should have the property xAmzAlgorithm (base name: "X-Amz-Algorithm")', function() {
        // TODO: update the code to test the property xAmzAlgorithm
        expect(instance).to.have.property('xAmzAlgorithm');
        // expect(instance.xAmzAlgorithm).to.be(expectedValueLiteral);
      });

      it('should have the property xAmzSignature (base name: "X-Amz-Signature")', function() {
        // TODO: update the code to test the property xAmzSignature
        expect(instance).to.have.property('xAmzSignature');
        // expect(instance.xAmzSignature).to.be(expectedValueLiteral);
      });

      it('should have the property xAmzSecurityToken (base name: "X-Amz-Security-Token")', function() {
        // TODO: update the code to test the property xAmzSecurityToken
        expect(instance).to.have.property('xAmzSecurityToken');
        // expect(instance.xAmzSecurityToken).to.be(expectedValueLiteral);
      });

      it('should have the property xAmzCredential (base name: "X-Amz-Credential")', function() {
        // TODO: update the code to test the property xAmzCredential
        expect(instance).to.have.property('xAmzCredential');
        // expect(instance.xAmzCredential).to.be(expectedValueLiteral);
      });

    });
  });

}));

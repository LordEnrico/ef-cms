/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DevEfCms);
  }
}(this, function(expect, DevEfCms) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TrialSession', function() {
      beforeEach(function() {
        instance = new DevEfCms.TrialSession();
      });

      it('should create an instance of TrialSession', function() {
        // TODO: update the code to test TrialSession
        expect(instance).to.be.a(DevEfCms.TrialSession);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property sessionType (base name: "sessionType")', function() {
        // TODO: update the code to test the property sessionType
        expect(instance).to.have.property('sessionType');
        // expect(instance.sessionType).to.be(expectedValueLiteral);
      });

      it('should have the property maxCases (base name: "maxCases")', function() {
        // TODO: update the code to test the property maxCases
        expect(instance).to.have.property('maxCases');
        // expect(instance.maxCases).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "startDate")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property startTime (base name: "startTime")', function() {
        // TODO: update the code to test the property startTime
        expect(instance).to.have.property('startTime');
        // expect(instance.startTime).to.be(expectedValueLiteral);
      });

      it('should have the property trialLocation (base name: "trialLocation")', function() {
        // TODO: update the code to test the property trialLocation
        expect(instance).to.have.property('trialLocation');
        // expect(instance.trialLocation).to.be(expectedValueLiteral);
      });

      it('should have the property trialSessionId (base name: "trialSessionId")', function() {
        // TODO: update the code to test the property trialSessionId
        expect(instance).to.have.property('trialSessionId');
        // expect(instance.trialSessionId).to.be(expectedValueLiteral);
      });

    });
  });

}));

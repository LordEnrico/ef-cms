/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CaseNote} from '../model/CaseNote';
import {UserNote} from '../model/UserNote';

/**
* CaseNotes service.
* @module api/CaseNotesApi
* @version 2019-03-06T15:30:48Z
*/
export class CaseNotesApi {

    /**
    * Constructs a new CaseNotesApi. 
    * @alias module:api/CaseNotesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the caseNotesDocketNumberDelete operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CaseNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete the case procedural note
     * delete the case procedural note. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberDelete(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberDelete");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CaseNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseNotesDocketNumberPut operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CaseNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * update a case procedural note
     * update a case procedural note. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberPut(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberPut");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CaseNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseNotesDocketNumberUserNotesDelete operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberUserNotesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete the user&#x27;s note for the logged in user
     * delete the user&#x27;s note for the logged in user. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberUserNotesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberUserNotesDelete(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberUserNotesDelete");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}/user-notes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseNotesDocketNumberUserNotesGet operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberUserNotesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * gets the logged in user&#x27;s note for a case
     * gets the logged in user&#x27;s note for a case. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberUserNotesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberUserNotesGet(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberUserNotesGet");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}/user-notes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseNotesDocketNumberUserNotesPost operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberUserNotesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create and associate a note to a case for the logged in user
     * create and associate a note to a case for the logged in user. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberUserNotesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberUserNotesPost(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberUserNotesPost");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}/user-notes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseNotesDocketNumberUserNotesPut operation.
     * @callback moduleapi/CaseNotesApi~caseNotesDocketNumberUserNotesPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserNote{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * update a user&#x27;s note for the logged in user
     * update a user&#x27;s note for the logged in user. 
     * @param {String} docketNumber 
     * @param {module:api/CaseNotesApi~caseNotesDocketNumberUserNotesPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseNotesDocketNumberUserNotesPut(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseNotesDocketNumberUserNotesPut");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserNote;

      return this.apiClient.callApi(
        '/case-notes/{docketNumber}/user-notes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
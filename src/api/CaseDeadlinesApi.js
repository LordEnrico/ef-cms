/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CaseDeadline} from '../model/CaseDeadline';
import {TrialSession} from '../model/TrialSession';

/**
* CaseDeadlines service.
* @module api/CaseDeadlinesApi
* @version 2019-03-06T15:30:48Z
*/
export class CaseDeadlinesApi {

    /**
    * Constructs a new CaseDeadlinesApi. 
    * @alias module:api/CaseDeadlinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the caseDeadlinesDocketNumberCaseDeadlineIdDelete operation.
     * @callback moduleapi/CaseDeadlinesApi~caseDeadlinesDocketNumberCaseDeadlineIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a case deadline
     * delete a case deadline. 
     * @param {String} docketNumber 
     * @param {String} caseDeadlineId 
     * @param {module:api/CaseDeadlinesApi~caseDeadlinesDocketNumberCaseDeadlineIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    caseDeadlinesDocketNumberCaseDeadlineIdDelete(docketNumber, caseDeadlineId, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseDeadlinesDocketNumberCaseDeadlineIdDelete");
      }
      // verify the required parameter 'caseDeadlineId' is set
      if (caseDeadlineId === undefined || caseDeadlineId === null) {
        throw new Error("Missing the required parameter 'caseDeadlineId' when calling caseDeadlinesDocketNumberCaseDeadlineIdDelete");
      }

      let pathParams = {
        'docketNumber': docketNumber,'caseDeadlineId': caseDeadlineId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/case-deadlines/{docketNumber}/{caseDeadlineId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseDeadlinesDocketNumberCaseDeadlineIdPut operation.
     * @callback moduleapi/CaseDeadlinesApi~caseDeadlinesDocketNumberCaseDeadlineIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrialSession{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updates a case deadline
     * updates a case deadline. 
     * @param {String} docketNumber 
     * @param {String} caseDeadlineId 
     * @param {module:api/CaseDeadlinesApi~caseDeadlinesDocketNumberCaseDeadlineIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseDeadlinesDocketNumberCaseDeadlineIdPut(docketNumber, caseDeadlineId, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseDeadlinesDocketNumberCaseDeadlineIdPut");
      }
      // verify the required parameter 'caseDeadlineId' is set
      if (caseDeadlineId === undefined || caseDeadlineId === null) {
        throw new Error("Missing the required parameter 'caseDeadlineId' when calling caseDeadlinesDocketNumberCaseDeadlineIdPut");
      }

      let pathParams = {
        'docketNumber': docketNumber,'caseDeadlineId': caseDeadlineId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrialSession;

      return this.apiClient.callApi(
        '/case-deadlines/{docketNumber}/{caseDeadlineId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseDeadlinesDocketNumberGet operation.
     * @callback moduleapi/CaseDeadlinesApi~caseDeadlinesDocketNumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CaseDeadline{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * gets deadlines for a case
     * gets deadlines for a case. 
     * @param {String} docketNumber 
     * @param {module:api/CaseDeadlinesApi~caseDeadlinesDocketNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseDeadlinesDocketNumberGet(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseDeadlinesDocketNumberGet");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CaseDeadline;

      return this.apiClient.callApi(
        '/case-deadlines/{docketNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseDeadlinesDocketNumberPost operation.
     * @callback moduleapi/CaseDeadlinesApi~caseDeadlinesDocketNumberPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CaseDeadline{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create and associate a deadline to a case
     * create and associate a deadline to a case. 
     * @param {String} docketNumber 
     * @param {module:api/CaseDeadlinesApi~caseDeadlinesDocketNumberPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseDeadlinesDocketNumberPost(docketNumber, callback) {
      
      let postBody = null;
      // verify the required parameter 'docketNumber' is set
      if (docketNumber === undefined || docketNumber === null) {
        throw new Error("Missing the required parameter 'docketNumber' when calling caseDeadlinesDocketNumberPost");
      }

      let pathParams = {
        'docketNumber': docketNumber
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CaseDeadline;

      return this.apiClient.callApi(
        '/case-deadlines/{docketNumber}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the caseDeadlinesGet operation.
     * @callback moduleapi/CaseDeadlinesApi~caseDeadlinesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CaseDeadline{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get all case deadlines
     * get all case deadlines. 
     * @param {module:api/CaseDeadlinesApi~caseDeadlinesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    caseDeadlinesGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CaseDeadline;

      return this.apiClient.callApi(
        '/case-deadlines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
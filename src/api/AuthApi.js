/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {AuthLoginBody} from '../model/AuthLoginBody';
import {Authorization} from '../model/Authorization';

/**
* Auth service.
* @module api/AuthApi
* @version 2019-03-06T15:30:48Z
*/
export class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the authLoginDelete operation.
     * @callback moduleapi/AuthApi~authLoginDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * expires the refreshToken cookie by setting an old expiration date
     * Expires the refreshToken cookie by setting an old expiration date. 
     * @param {module:api/AuthApi~authLoginDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    authLoginDelete(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/auth/login', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the authLoginPost operation.
     * @callback moduleapi/AuthApi~authLoginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Authorization{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * uses the oauth2 authorization code to generate a refresh and access token
     * Uses the oauth2 authorization code to generate a refresh and access token. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AuthLoginBody} opts.body the oauth2 authorization code
     * @param {module:api/AuthApi~authLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    authLoginPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json'];
      let returnType = Authorization;

      return this.apiClient.callApi(
        '/auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the authRefreshPost operation.
     * @callback moduleapi/AuthApi~authRefreshPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Authorization{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * uses the provided refreshToken cookie to generate a new access token
     * Uses the provided refreshToken cookie to generate a new access token. 
     * @param {String} cookie the refreshToken cookie
     * @param {module:api/AuthApi~authRefreshPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    authRefreshPost(cookie, callback) {
      
      let postBody = null;
      // verify the required parameter 'cookie' is set
      if (cookie === undefined || cookie === null) {
        throw new Error("Missing the required parameter 'cookie' when calling authRefreshPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'Cookie': cookie
      };
      let formParams = {
        
      };

      let authNames = ['CognitoUserPool'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Authorization;

      return this.apiClient.callApi(
        '/auth/refresh', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
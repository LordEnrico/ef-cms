/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DocketEntry model module.
 * @module model/DocketEntry
 * @version 2019-03-06T15:30:48Z
 */
export class DocketEntry {
  /**
   * Constructs a new <code>DocketEntry</code>.
   * a docket entry
   * @alias module:model/DocketEntry
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DocketEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocketEntry} obj Optional instance to populate.
   * @return {module:model/DocketEntry} The populated <code>DocketEntry</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocketEntry();
      if (data.hasOwnProperty('addToCoversheet'))
        obj.addToCoversheet = ApiClient.convertToType(data['addToCoversheet'], 'Boolean');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('docketEntryId'))
        obj.docketEntryId = ApiClient.convertToType(data['docketEntryId'], 'String');
      if (data.hasOwnProperty('docketNumber'))
        obj.docketNumber = ApiClient.convertToType(data['docketNumber'], 'String');
      if (data.hasOwnProperty('documentTitle'))
        obj.documentTitle = ApiClient.convertToType(data['documentTitle'], 'String');
      if (data.hasOwnProperty('documentType'))
        obj.documentType = ApiClient.convertToType(data['documentType'], 'String');
      if (data.hasOwnProperty('draftOrderState'))
        obj.draftOrderState = ApiClient.convertToType(data['draftOrderState'], Object);
      if (data.hasOwnProperty('entityName'))
        obj.entityName = ApiClient.convertToType(data['entityName'], 'String');
      if (data.hasOwnProperty('eventCode'))
        obj.eventCode = ApiClient.convertToType(data['eventCode'], 'String');
      if (data.hasOwnProperty('filedBy'))
        obj.filedBy = ApiClient.convertToType(data['filedBy'], 'String');
      if (data.hasOwnProperty('filingDate'))
        obj.filingDate = ApiClient.convertToType(data['filingDate'], 'String');
      if (data.hasOwnProperty('index'))
        obj.index = ApiClient.convertToType(data['index'], 'Number');
      if (data.hasOwnProperty('isDraft'))
        obj.isDraft = ApiClient.convertToType(data['isDraft'], 'Boolean');
      if (data.hasOwnProperty('isFileAttached'))
        obj.isFileAttached = ApiClient.convertToType(data['isFileAttached'], 'Boolean');
      if (data.hasOwnProperty('isMinuteEntry'))
        obj.isMinuteEntry = ApiClient.convertToType(data['isMinuteEntry'], 'Boolean');
      if (data.hasOwnProperty('isOnDocketRecord'))
        obj.isOnDocketRecord = ApiClient.convertToType(data['isOnDocketRecord'], 'Boolean');
      if (data.hasOwnProperty('isSealed'))
        obj.isSealed = ApiClient.convertToType(data['isSealed'], 'Boolean');
      if (data.hasOwnProperty('isStricken'))
        obj.isStricken = ApiClient.convertToType(data['isStricken'], 'Boolean');
      if (data.hasOwnProperty('pending'))
        obj.pending = ApiClient.convertToType(data['pending'], 'Boolean');
      if (data.hasOwnProperty('processingStatus'))
        obj.processingStatus = ApiClient.convertToType(data['processingStatus'], 'String');
      if (data.hasOwnProperty('receivedAt'))
        obj.receivedAt = ApiClient.convertToType(data['receivedAt'], 'String');
      if (data.hasOwnProperty('sealedTo'))
        obj.sealedTo = ApiClient.convertToType(data['sealedTo'], 'String');
      if (data.hasOwnProperty('servedAt'))
        obj.servedAt = ApiClient.convertToType(data['servedAt'], 'String');
      if (data.hasOwnProperty('signedAt'))
        obj.signedAt = ApiClient.convertToType(data['signedAt'], 'String');
      if (data.hasOwnProperty('signedByUserId'))
        obj.signedByUserId = ApiClient.convertToType(data['signedByUserId'], 'String');
      if (data.hasOwnProperty('signedJudgeName'))
        obj.signedJudgeName = ApiClient.convertToType(data['signedJudgeName'], 'String');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
    }
    return obj;
  }
}

/**
 * if the docket entry was added to the coversheet
 * @member {Boolean} addToCoversheet
 */
DocketEntry.prototype.addToCoversheet = undefined;

/**
 * the date the docket entry was created
 * @member {String} createdAt
 */
DocketEntry.prototype.createdAt = undefined;

/**
 * the docket entry id to identify the docket entry
 * @member {String} docketEntryId
 */
DocketEntry.prototype.docketEntryId = undefined;

/**
 * the docket number the docket entry belongs to
 * @member {String} docketNumber
 */
DocketEntry.prototype.docketNumber = undefined;

/**
 * the title of the docket entry
 * @member {String} documentTitle
 */
DocketEntry.prototype.documentTitle = undefined;

/**
 * the type of docket entry
 * @member {String} documentType
 */
DocketEntry.prototype.documentType = undefined;

/**
 * keeps track of the text written inside the draft order
 * @member {Object} draftOrderState
 */
DocketEntry.prototype.draftOrderState = undefined;

/**
 * the type of entity
 * @member {String} entityName
 */
DocketEntry.prototype.entityName = undefined;

/**
 * the event code type of entity
 * @member {String} eventCode
 */
DocketEntry.prototype.eventCode = undefined;

/**
 * who filed the docket entry
 * @member {String} filedBy
 */
DocketEntry.prototype.filedBy = undefined;

/**
 * the date the docket entry was filed
 * @member {String} filingDate
 */
DocketEntry.prototype.filingDate = undefined;

/**
 * the position in the docket record
 * @member {Number} index
 */
DocketEntry.prototype.index = undefined;

/**
 * used to know if the docket entry is a draft
 * @member {Boolean} isDraft
 */
DocketEntry.prototype.isDraft = undefined;

/**
 * used to know if a file is attached to the docket entry
 * @member {Boolean} isFileAttached
 */
DocketEntry.prototype.isFileAttached = undefined;

/**
 * used to know if the docket entry is a minute entry
 * @member {Boolean} isMinuteEntry
 */
DocketEntry.prototype.isMinuteEntry = undefined;

/**
 * used to know if the docket entry is on the docket record
 * @member {Boolean} isOnDocketRecord
 */
DocketEntry.prototype.isOnDocketRecord = undefined;

/**
 * used to know if the docket entry has been sealed
 * @member {Boolean} isSealed
 */
DocketEntry.prototype.isSealed = undefined;

/**
 * used to know if the docket entry has been stricken
 * @member {Boolean} isStricken
 */
DocketEntry.prototype.isStricken = undefined;

/**
 * used to know if the docket entry is pending
 * @member {Boolean} pending
 */
DocketEntry.prototype.pending = undefined;

/**
 * keeps track of the processing state of the docket entry
 * @member {String} processingStatus
 */
DocketEntry.prototype.processingStatus = undefined;

/**
 * the date the docket entry was received
 * @member {String} receivedAt
 */
DocketEntry.prototype.receivedAt = undefined;

/**
 * who the docket entry is sealed to
 * @member {String} sealedTo
 */
DocketEntry.prototype.sealedTo = undefined;

/**
 * when the docket entry was served
 * @member {String} servedAt
 */
DocketEntry.prototype.servedAt = undefined;

/**
 * when the docket entry was signed
 * @member {String} signedAt
 */
DocketEntry.prototype.signedAt = undefined;

/**
 * who signed the docket entry
 * @member {String} signedByUserId
 */
DocketEntry.prototype.signedByUserId = undefined;

/**
 * the name of the judge who signed the docket entry
 * @member {String} signedJudgeName
 */
DocketEntry.prototype.signedJudgeName = undefined;

/**
 * the userId of who created the docket entry
 * @member {String} userId
 */
DocketEntry.prototype.userId = undefined;


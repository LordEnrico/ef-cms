/*
 * dev-ef-cms
 * Documents API for U.S. Tax Court EF-CMS
 *
 * OpenAPI spec version: 2019-03-06T15:30:48Z
 * Contact: webmaster@ustaxcourt.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Message model module.
 * @module model/Message
 * @version 2019-03-06T15:30:48Z
 */
export class Message {
  /**
   * Constructs a new <code>Message</code>.
   * a case deadline
   * @alias module:model/Message
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Message} obj Optional instance to populate.
   * @return {module:model/Message} The populated <code>Message</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Message();
      if (data.hasOwnProperty('attachments'))
        obj.attachments = ApiClient.convertToType(data['attachments'], Array);
      if (data.hasOwnProperty('caseStatus'))
        obj.caseStatus = ApiClient.convertToType(data['caseStatus'], 'String');
      if (data.hasOwnProperty('caseTitle'))
        obj.caseTitle = ApiClient.convertToType(data['caseTitle'], 'String');
      if (data.hasOwnProperty('completedAt'))
        obj.completedAt = ApiClient.convertToType(data['completedAt'], 'String');
      if (data.hasOwnProperty('completedBy'))
        obj.completedBy = ApiClient.convertToType(data['completedBy'], 'String');
      if (data.hasOwnProperty('completedBySection'))
        obj.completedBySection = ApiClient.convertToType(data['completedBySection'], 'String');
      if (data.hasOwnProperty('completedByUserId'))
        obj.completedByUserId = ApiClient.convertToType(data['completedByUserId'], 'String');
      if (data.hasOwnProperty('completedMessage'))
        obj.completedMessage = ApiClient.convertToType(data['completedMessage'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'String');
      if (data.hasOwnProperty('docketNumber'))
        obj.docketNumber = ApiClient.convertToType(data['docketNumber'], 'String');
      if (data.hasOwnProperty('docketNumberWithSuffix'))
        obj.docketNumberWithSuffix = ApiClient.convertToType(data['docketNumberWithSuffix'], 'String');
      if (data.hasOwnProperty('entityName'))
        obj.entityName = ApiClient.convertToType(data['entityName'], 'String');
      if (data.hasOwnProperty('from'))
        obj.from = ApiClient.convertToType(data['from'], 'String');
      if (data.hasOwnProperty('fromSection'))
        obj.fromSection = ApiClient.convertToType(data['fromSection'], 'String');
      if (data.hasOwnProperty('fromUserId'))
        obj.fromUserId = ApiClient.convertToType(data['fromUserId'], 'String');
      if (data.hasOwnProperty('isCompleted'))
        obj.isCompleted = ApiClient.convertToType(data['isCompleted'], 'Boolean');
      if (data.hasOwnProperty('isRepliedTo'))
        obj.isRepliedTo = ApiClient.convertToType(data['isRepliedTo'], 'Boolean');
      if (data.hasOwnProperty('message'))
        obj.message = ApiClient.convertToType(data['message'], 'String');
      if (data.hasOwnProperty('messageId'))
        obj.messageId = ApiClient.convertToType(data['messageId'], 'String');
      if (data.hasOwnProperty('parentMessageId'))
        obj.parentMessageId = ApiClient.convertToType(data['parentMessageId'], 'String');
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], 'String');
      if (data.hasOwnProperty('toSection'))
        obj.toSection = ApiClient.convertToType(data['toSection'], 'String');
      if (data.hasOwnProperty('toUserId'))
        obj.toUserId = ApiClient.convertToType(data['toUserId'], 'String');
    }
    return obj;
  }
}

/**
 * array of document metadata objects attached to the message
 * @member {Array} attachments
 */
Message.prototype.attachments = undefined;

/**
 * status of the associated case
 * @member {String} caseStatus
 */
Message.prototype.caseStatus = undefined;

/**
 * case title for the associated cases
 * @member {String} caseTitle
 */
Message.prototype.caseTitle = undefined;

/**
 * when the message was marked as completed
 * @member {String} completedAt
 */
Message.prototype.completedAt = undefined;

/**
 * the name of the user who completed the message thread
 * @member {String} completedBy
 */
Message.prototype.completedBy = undefined;

/**
 * the section of the user who completed the message thread
 * @member {String} completedBySection
 */
Message.prototype.completedBySection = undefined;

/**
 * the ID of the user who completed the message thread
 * @member {String} completedByUserId
 */
Message.prototype.completedByUserId = undefined;

/**
 * the message entered when completing the message thread
 * @member {String} completedMessage
 */
Message.prototype.completedMessage = undefined;

/**
 * message created time
 * @member {String} createdAt
 */
Message.prototype.createdAt = undefined;

/**
 * docket number of the associated case
 * @member {String} docketNumber
 */
Message.prototype.docketNumber = undefined;

/**
 * docket number of the associated case with its suffix
 * @member {String} docketNumberWithSuffix
 */
Message.prototype.docketNumberWithSuffix = undefined;

/**
 * the name of the entity - Message
 * @member {String} entityName
 */
Message.prototype.entityName = undefined;

/**
 * the name of the user who sent the message
 * @member {String} from
 */
Message.prototype.from = undefined;

/**
 * the section of the user who sent the message
 * @member {String} fromSection
 */
Message.prototype.fromSection = undefined;

/**
 * the ID of the user who sent the message
 * @member {String} fromUserId
 */
Message.prototype.fromUserId = undefined;

/**
 * whether the message thread has been completed
 * @member {Boolean} isCompleted
 */
Message.prototype.isCompleted = undefined;

/**
 * whether the message has been replied to or forwarded
 * @member {Boolean} isRepliedTo
 */
Message.prototype.isRepliedTo = undefined;

/**
 * the message text
 * @member {String} message
 */
Message.prototype.message = undefined;

/**
 * the unique ID generated by the system to represent the message
 * @member {String} messageId
 */
Message.prototype.messageId = undefined;

/**
 * the unique ID generated by the system to represent the parent / initial message
 * @member {String} parentMessageId
 */
Message.prototype.parentMessageId = undefined;

/**
 * the subject line of the message
 * @member {String} subject
 */
Message.prototype.subject = undefined;

/**
 * the name of the user who is the recipient of the message
 * @member {String} to
 */
Message.prototype.to = undefined;

/**
 * the section of the user who is the recipient of the message
 * @member {String} toSection
 */
Message.prototype.toSection = undefined;

/**
 * the ID of the user who is the recipient of the message
 * @member {String} toUserId
 */
Message.prototype.toUserId = undefined;

